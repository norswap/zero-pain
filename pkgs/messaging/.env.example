# This file can be imported into makefiles or shells to set deployment variables.

export RPC_LOCAL=http://localhost:8545
export RPC_TEST=https://rpc.testnet.happy.tech/http
export RPC_MAIN=https://eth.llamarpc.com

####################################################################################################
# APIs
####################################################################################################

# Automatically picked up by Foundry when deploying to verify contracts.
ETHERSCAN_API_KEY=<your-etherscan-api-key>

# Whether to automatically verify the contracts.
VERIFY_LOCAL=false
VERIFY_TEST=false
VERIFY_MAIN=false

# Verifier configuration for each environment
# NOTE: don't include quotes here, or it will break the makefile commands.
VERIFIER_FLAG_LOCAL=
VERIFIER_FLAG_TEST=--verifier blockscout
VERIFIER_FLAG_MAIN=

VERIFIER_URL_LOCAL=
VERIFIER_URL_TEST=--verifier-url https://explorer.testnet.happy.tech/api
VERIFIER_URL_MAIN=

# Whether to append metadata to bytecode
APPEND_METADATA_LOCAL=false
APPEND_METADATA_TEST=true
APPEND_METADATA_MAIN=true

####################################################################################################
# Private Keys
####################################################################################################

# (Using test account 0 private key - safe to make public.)

export PRIVATE_KEY_LOCAL=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

# Don't use these!!! Use Foundry's account feature (see below), which avoids writing down private
# keys, avoiding all risk of them leaking.

# export PRIVATE_KEY_TEST=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
# export PRIVATE_KEY_MAIN=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80

####################################################################################################
# Foundry Accounts
####################################################################################################

# Foundry accounts avoid having private keys sitting in plaintext on your machine.

# To enable Foundry Accounts, set this variable to true:
export USE_FOUNDRY_ACCOUNT=true

export ACCOUNT_LOCAL=test-account-0
export ACCOUNT_TEST=happychain-test
export ACCOUNT_MAIN=happychain-main

export PASSFILE_LOCAL=.password.local
export PASSFILE_TEST=.password.test
export PASSFILE_MAIN=.password.main

# To use this: run
#   cast wallet import test-account-0 --interactive
# Then copy your key in, set a password (don't reuse), and save the password in .password.local.

####################################################################################################
# Ports
####################################################################################################

# Ports used for local development
export ANVIL_PORT=8545

####################################################################################################
# LayerZero
####################################################################################################

# Find deployment addresses & EIDs here:
# https://docs.layerzero.network/v2/deployments/deployed-contracts

export OWNER_ADDRESS=0xEe3aE13ed56E877874a6C5FBe7cdA7fc8573a7bE

# Set this to select which chain to deploy to.
# CHAIN_NYM=OP

export OP_SEPOLIA_EID=40232
export ARB_SEPOLIA_EID=40231

export OP_ENDPOINT_ADDRESS=0x6EDCE65403992e310A62460808c4b910D972f10f
export OP_SEND_LIB_ADDRESS=0xB31D2cb502E25B30C651842C7C3293c51Fe6d16f
export OP_RECV_LIB_ADDRESS=0x9284fd59B95b9143AF0b9795CAC16eb3C723C9Ca
export OP_LZ_DVN_ADDRESS=0xd680ec569f269aa7015f7979b4f1239b5aa4582c

export ARB_ENDPOINT_ADDRESS=0x6EDCE65403992e310A62460808c4b910D972f10f # Same as OP!
export ARB_SEND_LIB_ADDRESS=0x4f7cd4DA19ABB31b0eC98b9066B9e857B1bf9C0E
export ARB_RECV_LIB_ADDRESS=0x75Db67CDab2824970131D5aa9CECfC9F69c69636
export ARB_LZ_DVN_ADDRESS=0x53f488e93b4f1b60e8e83aa374dbe1780a1ee8a8

export OP_SRC_EID=$(OP_SEPOLIA_EID)
export OP_DST_EID=$(ARB_SEPOLIA_EID)
export OP_REMOTE_ENDPOINT_ADDRESS=$(ARB_ENDPOINT_ADDRESS)

export ARB_SRC_EID=$(ARB_SEPOLIA_EID)
export ARB_DST_EID=$(OP_SEPOLIA_EID)
export ARB_REMOTE_ENDPOINT_ADDRESS=$(OP_ENDPOINT_ADDRESS)

# LayerZero V2 Endpoint contract
export ENDPOINT_ADDRESS=$($(CHAIN_NYM)_ENDPOINT_ADDRESS)
# SendUln302 address
export SEND_LIB_ADDRESS=$($(CHAIN_NYM)_SEND_LIB_ADDRESS)
# ReceiveUln302 address
export RECV_LIB_ADDRESS=$($(CHAIN_NYM)_RECV_LIB_ADDRESS)
# Address of the LayeZero DVN
export LZ_DVN_ADDRESS=$($(CHAIN_NYM)_LZ_DVN_ADDRESS)
# EID of the current (sending) network.
export SRC_EID=$($(CHAIN_NYM)_SRC_EID)
# EID of the remote (receiving) network.
export DST_EID=$($(CHAIN_NYM)_DST_EID)
# Address of the remote OApp
export REMOTE_ENDPOINT_ADDRESS=$($(CHAIN_NYM)_REMOTE_ENDPOINT_ADDRESS)

# Grace period during which the old library can still be used after selecting a new library
# cf. https://layerzero.network/publications/LayerZero_Whitepaper_V2.1.0.pdf
export GRACE_PERIOD=0

export OP_RPC_TEST=https://rpc.testnet.happy.tech/http
export ARB_RPC_TEST=https://arbitrum-sepolia-rpc.publicnode.com
export RPC_TEST=$($(CHAIN_NYM)_RPC_TEST)

# Message to send cross-chain (SendMessage.s.sol)
export MESSAGE="Hello World"